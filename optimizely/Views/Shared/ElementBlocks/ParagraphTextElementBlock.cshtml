@*
    ====================================
    Version: 5.0.0.0. Modified: 20210818
    ====================================
*@

@using EPiServer.Web
@using EPiServer.ServiceLocation
@using EPiServer.Forms.Helpers.Internal
@using EPiServer.Forms.Implementation.Elements
@using EPiServer.Forms.Core.Internal

@model ParagraphTextElementBlock

@{
    var formBusinessService = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<FormBusinessService>();
    var formElement = Model.FormElement;
    var paragraphText = Model.ParagraphText;
    var originalParagraphText = Model.OriginalParagraphText;
    var cssClasses = Model.GetValidationCssClasses();
}

@using (Html.BeginElement(Model, new { @class = "FormParagraphText Form__Element--NonData" + cssClasses, @data_f_element_nondata = "" }))
{
    if (ServiceLocator.Current.GetInstance<IContextModeResolver>().CurrentMode == ContextMode.Edit)
    {
        <div id="@formElement.Guid" @Html.Raw(Model.AttributesString) style="font-size:8px">@Html.Raw(Model.EditViewFriendlyTitle)</div>
    }
    else
    {
        <div id="@formElement.Guid" @Html.Raw(Model.AttributesString) style="height:380px">@Html.Raw(formBusinessService.ToHtmlStringWithFriendlyUrls(paragraphText))</div>
        <script type="text/javascript">
            if (typeof $$epiforms !== 'undefined') {
                $$epiforms(document).ready(function () {
                    $$epiforms('.EPiServerForms, [data-f-type="form"]').on("formsNavigationNextStep formsSetupCompleted", function (event) {
                        (function ($) {
                            var text = @Html.Raw(originalParagraphText),
                                workingFormInfo = event.workingFormInfo,
                                searchPattern = null,
                                $workingForm = workingFormInfo.$workingForm,
                                $currentElement = $("#@formElement.Guid", $workingForm);

                            // if cannot find the element in form, do nothing
                            if (!$currentElement || $currentElement.length == 0) {
                                return;
                            }

                            var data = epi.EPiServer.Forms.Data.loadFormDataFromStorage(workingFormInfo.Id);

                            // In case the element is not under the form folder, Model.HasPlaceHolder() will return false because of cannot find the owner form.
                            // So when Model.FindOwnerForm() is null, we allow to replace the placeholder in JS mode.
                            @if ((!Model.DisablePlaceholdersReplacement && Model.HasPlaceHolder()) || Model.FindOwnerForm() == null)
                            {
                                // replace placeholder with real field value
                                <text>
                                for (var fieldName in workingFormInfo.ElementsInfo) {
                                    if (workingFormInfo.FieldsExcludedInSubmissionSummary.indexOf(fieldName) != -1) {
                                        continue;
                                    }
                                    var elementInfo = workingFormInfo.ElementsInfo[fieldName],
                                        friendlyName = elementInfo.friendlyName;
                                    if (!friendlyName) {
                                        continue;
                                    }
                                    var value = elementInfo && elementInfo.customBinding == true ?
                                        epi.EPiServer.Forms.CustomBindingElements[elementInfo.type](elementInfo, data[fieldName])
                                        :data[fieldName];
                                    if(value == null || value === undefined) {
                                        value = "";
                                    }

                                    // If the element is inactive (hidden due to dependency rules), set its value to empty
                                     if (epi.EPiServer.Forms.Dependency._isInactiveElement(fieldName, workingFormInfo)) {
                                        value = "";
                                    }

                                    //We have to encode the friendlyName before replacing it with placeholders in the paragraph text because the paragraph text is already encoded.
                                    var encodedFriendlyName =  $('<div></div>').text(friendlyName).html();

                                    //https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace
                                    //https://msdn.microsoft.com/en-us/library/ewy2t5e0.aspx
                                    var escapeSpecialCharacterFromEncodedFriendlyName = encodedFriendlyName.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
                                    searchPattern = new RegExp("#" + escapeSpecialCharacterFromEncodedFriendlyName + "#", 'g');
                                    text = text.replace(searchPattern, $('<div></div>').text(value).html());
                                }
                                </text>
                            }
                            $currentElement.html(text);

                        })($$epiforms);
                    });
                });
            }
        </script>
    }
}
