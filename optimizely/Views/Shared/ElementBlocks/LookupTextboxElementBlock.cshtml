@*
    ====================================
    Version: 5.0.0.0. Modified: 20210818
    ====================================
*@

@using EPiServer.Forms.Helpers.Internal
@using EPiServer.Forms.Implementation.Elements
@using repos.models.blocks.ElementBlock
@model LookupTextboxElementBlock

@{
    var formContainer = Model.FindOwnerForm();
    var formElement = Model.FormElement;
    var labelText = Model.Label;
    var propertyList = Model.ApiReturnMappings;
    var buttonText = Model.ButtonName;
    var cssClasses = Model.GetValidationCssClasses();
}

@using (Html.BeginElement(Model, new { @class = "FormTextbox" + cssClasses, data_f_type = "textbox" }))
{
    <label for="@formElement.Guid" class="Form__Element__Caption" style="width: 450px;">@labelText</label>
    <input name="@formElement.ElementName" id="@formElement.Guid" type="text" class="FormTextbox__Input"
           aria-describedby="@Util.GetAriaDescribedByElementName(formElement.ElementName)" 
           @(!string.IsNullOrWhiteSpace(Model.PlaceHolder) ? Html.Raw($"placeholder=\"{Model.PlaceHolder}\""): "")
           value="@Model.GetDefaultValue()" @Html.Raw(Model.AttributesString) data-f-datainput
           aria-invalid="@Util.GetAriaInvalidByValidationCssClasses(cssClasses)" />
    <button type="button" class="btn btn-warning btn-sm" onclick="callRrnVerfication()"> @buttonText </button>

    @Html.ValidationMessageFor(Model)
    @Model.RenderDataList()

    <script type="text/javascript">

        function callRrnVerfication() 
        {
            //var name = document.getElementById("txtName").value;
            var request;
            if (window.XMLHttpRequest) {
                //New browsers.
                request = new XMLHttpRequest();
            }
            else if (window.ActiveXObject) {
                //Old IE Browsers.
                request = new ActiveXObject("Microsoft.XMLHTTP");
            }
           if (request != null) {
               $body.addClass('loading');
               var control = document.getElementById("@formElement.Guid");
               
                var url = "https://localhost:7066/api/ExternalService/" + document.getElementById("@formElement.Guid").value;
                console.dir(url);
                request.open("GET", url);
                request.setRequestHeader("Content-Type", "application/json");
                request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                request.setRequestHeader('Access-Control-Allow-Origin', '*');
                request.onreadystatechange = function () {
                    if (request.readyState == 4 && request.status == 200) {
 
                        SetValuesToForm(request.responseText);
                        $body.removeClass('loading');
                        //alert("Hello: " + response.Name + ".\nCurrent Date and Time: " + response.DateTime);
                    }
                };
                request.send(null);
            }
        }

        function SetValuesToForm(response) 
        {
            console.dir(response);
            var responseObjs = JSON.parse(response);

            $('#@Model.ReturnField').val(response);
            console.dir(responseObjs["SpecialComment"]);
            var valueToSet = responseObjs["SpecialComment"].split('^');
            

            $('#@Model.ExportOfftakeField').val(valueToSet[1]);
             $('#@Model.CoonectionPhaseField').val(responseObjs["supplyPhasesNo"].split('^')[1]);
            $('#@Model.CoonectionTypeField').val(responseObjs["supplyTransfomerKVA"].split('^')[1]);
            $('#@Model.EmergencySolarManagementField').val(responseObjs["serviceOrderId"].split('^')[1]);
            $('#@Model.LocalNetwork').val(responseObjs["nmi"].split('^')[1]);

             console.dir("Here!");
            $('#@Model.AddressField').append($('<option>', {
                value: responseObjs["Address1"],
                text: responseObjs["Address1"]
            }));

        }
    </script>

}

@section Scripts{

    
}
